# Prefix added onto each message
delphi.prefix=<dark_gray>[<b><gradient:gold:red>Delphi</gradient></b>]

# Errors when parsing resource paths
delphi.paths.emptyModule=Empty module name
delphi.paths.unknownModule=Unknown module: <arg:0>
delphi.paths.illegalCharacter=Illegal character '<arg:0>' in path.

# Errors when opening documents
delphi.error.noModuleDir=Modules directory (plugins/Delphi/modules) does not exist.
delphi.error.moduleAccess=Access denied to the module's .zip file.
delphi.error.noSuchFile=No such file.
delphi.error.accessDenied=Read access to file was denied: <arg:0>
delphi.error.ioError=Internal IO error when attempting to read file: <arg:0>
delphi.error.moduleError=Internal module error: <arg:0>
delphi.error.saxParser=Failed to initialize XML parser.
delphi.error.docParseFail=Failed to parse XML document.
delphi.error.missingPlugins=The following required plugins are missing: <arg:0>
delphi.error.gameTooOld=Server version is too old, at least <arg:0> is required.
delphi.error.unknown=Internal Error
delphi.error.noTarget=Not looking at any open pages.
delphi.error.instanceNameUsed=Instance name "<arg:0>" already in use.
delphi.error.instanceNameIllegal=Instance name "<arg:0>" is not allowed.
delphi.error.viewNotFound=No open page with instance name "<arg:0>" found.
delphi.error.requiresLocation=Location must be specified if there's more than 1 player.
delphi.error.debugDumpFail=Failed to dump debug XML: IO Error.
delphi.error.debugNoTarget=Failed to dump debug XML: Not looking at an element.
delphi.error.notACanvas=You are not looking at a <canvas> element!
delphi.error.canvasDumpFailed=Failed to create canvas PNG file, check console.

# General messages
delphi.docOpened=Document opened.
delphi.debug.outlineToggle.on=Now drawing element outlines.
delphi.debug.outlineToggle.off=No longer drawing element outlines.
delphi.debug.dumpedXml=Dumped XML debug info to <arg:0>.
delphi.debug.dumpedCanvas=Dumped Canvas to PNG file in 'plugins/Delphi/debug'
delphi.closed.all=Closed all open pages.
delphi.closed.named=Closed open page with name "<arg:0>"
delphi.closed.targeted=Closed targeted view.
delphi.reloadedConfig=Reloaded Delphi Config.
delphi.devtools.opened=Devtools opened.
delphi.devtools.alreadyHasDevtools=This page already has an open devtools.

# Player-related commands messages
delphi.playerList.none=Open page <arg:0> has no viewers.
delphi.playerList.server=Open page <arg:0> is viewed by all players.
delphi.playerList.tooMany=Open page <arg:0> is viewed by <arg:1> players.
delphi.playerList.list=Open page <arg:0> players(<arg:1>): <arg:2>.
delphi.players.error.cannotAddToServerList=Open page <arg:0> is viewed by all players, cannot add player.
delphi.players.error.cannotRemoveFromServerList=Open page <arg:0> is viewed by all players, cannot remove player.
delphi.players.error.alreadyViewer=<arg:0> can already see <arg:1>.
delphi.players.error.allAlreadyViewers=All <arg:0> players can already see <arg:1>.
delphi.players.error.notAViewer=<arg:0> already can't see <arg:1>.
delphi.players.error.notViewers=None of the <arg:0> players are <arg:1> viewers.
delphi.players.added.single=Added <arg:0> to <arg:1>'s viewers.
delphi.players.added.multiple=Added <arg:0> players to <arg:1>'s viewers.
delphi.players.added.multiple.skipped=Added <arg:0> players to <arg:1>'s viewers (Skipped <arg:2> that were already viewers).
delphi.players.removed.single=Removed <arg:0> from <arg:1>'s viewers.
delphi.players.removed.multiple=Removed <arg:0> players from <arg:1>'s viewers.
delphi.players.removed.multiple.skipped=Removed <arg:0> players from <arg:1>'s viewers (Skipped <arg:2> that weren't viewers).

# Input messages
delphi.input.yes=Submit
delphi.input.no=Cancel
delphi.input.title=Enter input
delphi.input.invalidNumber=Not a valid number: <arg:0>.

# Devtool tabs
delphi.devtools.tab.elements=Elements
delphi.devtools.tab.styles=Styles
delphi.devtools.tab.box=Box Model
delphi.devtools.tab.act=Actions
delphi.devtools.tab.meta=Meta

# Devtools meta things
delphi.devtools.meta.none=(none)
delphi.devtools.meta.players=Players (<arg:0>)
delphi.devtools.meta.players.all=(all)
delphi.devtools.meta.instName=Instance Name
delphi.devtools.meta.moduleName=Module Name
delphi.devtools.meta.moduleType=Module Type
delphi.devtools.meta.moduleType.api=api-module
delphi.devtools.meta.moduleType.zip=zip(<arg:0>)
delphi.devtools.meta.moduleType.dir=directory(<arg:0>)
delphi.devtools.meta.moduleType.jar=jar-resource
delphi.devtools.meta.moduleType.io=io-module
delphi.devtools.meta.moduleType.unknown=unknown
delphi.devtools.meta.path=Resource Path
delphi.devtools.meta.height=Screen Height
delphi.devtools.meta.width=Screen Width
delphi.devtools.meta.renderObjects=Render Objects
delphi.devtools.meta.entities=Entities
delphi.devtools.meta.stylesheets=Stylesheets
delphi.devtools.meta.stylesheets.default=default-stylesheet
delphi.devtools.meta.stylesheets.inline=inlined
delphi.devtools.meta.stylesheets.programmatic=programmatic
delphi.devtools.meta.stylesheets.rules=(<arg:0> Rules)

delphi.devtools.actions.relayout=Force re-layout
delphi.devtools.actions.rerender=Force re-render
delphi.devtools.actions.styleUpdate=Force style update

# Inspect Element messages
delphi.devtools.addAttr.title=Add new attribute
delphi.devtools.addAttr.nameLabel=Attribute Name
delphi.devtools.addAttr.valueLabel=Value